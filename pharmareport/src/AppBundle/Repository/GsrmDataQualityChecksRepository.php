<?php

namespace AppBundle\Repository;

/**
 * GsrmDataQualityChecksRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GsrmDataQualityChecksRepository extends \Doctrine\ORM\EntityRepository
{
    public function getDistinctClientOutputId($loadDate)
    {
        $qb = $this->createQueryBuilder('d');

        $qb
          ->select('d.clientOutputId')
          ->where('d.loadDate = :loadDateParameter')
          ->setParameter('loadDateParameter', $loadDate)
          ->distinct()
        ;

        return $qb
          ->getQuery()
          ->getArrayResult()
        ;
    }


    public function getNbrOfWarnings($loadDate, $clientoutputId)
    {
        $qb = $this->createQueryBuilder('d');

        $qb
          ->select('count(d.status)')
          ->where('d.loadDate = :loadDateParam')
          ->setParameter('loadDateParam', $loadDate)
          ->andwhere('d.clientOutputId = :clientoutputIdParam')
          ->setParameter('clientoutputIdParam', $clientoutputId)
          ->andWhere('d.status = :statusParam')
          ->setParameter('statusParam', 'WARNING')
        ;

        return $qb
          ->getQuery()
          ->getSingleScalarResult()
        ;
        /*
        $qb
          ->select('d.status')
          ->where('d.loadDate = :loadDateParam')
          ->setParameter('loadDateParam', $loadDate)
          ->andwhere('d.clientOutputId = :clientoutputIdParam')
          ->setParameter('clientoutputIdParam', $clientoutputId)
          ->andWhere('d.status = :statusParam')
          ->setParameter('statusParam', 'WARNING')
        ;

        return $qb
          ->getQuery()
          ->getArrayResult()
        ;
        */
    }


    public function getNbrOfRemovedMappings($loadDate, $clientoutputId)
    {
        $qb = $this->createQueryBuilder('d');

        $qb
          ->select('count(d.status)')
          ->where('d.loadDate = :loadDateParam')
          ->setParameter('loadDateParam', $loadDate)
          ->andwhere('d.clientOutputId = :clientoutputIdParam')
          ->setParameter('clientoutputIdParam', $clientoutputId)
          ->andWhere('d.status = :statusParam')
          ->setParameter('statusParam', 'REMOVED MAPPING')
        ;

        return $qb
          ->getQuery()
          ->getSingleScalarResult()
        ;
    }
}
